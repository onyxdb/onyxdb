openapi: 3.0.0
info:
  version: 1.0.0
  title: onyxdb-mdb
servers:
  - url: http://localhost:9001
    description: localhost
paths:
  # ---------- v1ResourcePresets ----------
  /api/v1/resource-presets:
    get:
      summary: Get resource presets
      operationId: listResourcePresets
      tags:
        - v1ResourcePresets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ListResourcePresetsResponse'
    post:
      summary: Create resource preset
      operationId: createResourcePreset
      tags:
        - v1ResourcePresets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateResourcePresetRequest'
      responses:
        '200':
          description: OK
  /api/v1/resource-presets/{resourcePresetId}:
    get:
      summary: Get resource preset
      operationId: getResourcePreset
      tags:
        - v1ResourcePresets
      parameters:
        - $ref: '#/components/parameters/ResourcePresetIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ResourcePresetResponse'
    put:
      summary: Update resource preset
      operationId: updateResourcePreset
      tags:
        - v1ResourcePresets
      parameters:
        - $ref: '#/components/parameters/ResourcePresetIdPV'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateResourcePresetRequest'
      responses:
        '200':
          description: OK
    delete:
      summary: Delete resource preset
      operationId: deleteResourcePreset
      tags:
        - v1ResourcePresets
      parameters:
        - $ref: '#/components/parameters/ResourcePresetIdPV'
      responses:
        '200':
          description: OK

  # ---------- v1Zones ----------
  /api/v1/zones:
    get:
      summary: Get zones
      operationId: listZones
      tags:
        - v1Zones
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ListZonesResponse'
    post:
      summary: Create zone
      operationId: createZone
      tags:
        - v1Zones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateZoneRequest'
      responses:
        '200':
          description: OK
  /api/v1/zones/{zoneId}:
    get:
      summary: Get zone
      operationId: getZone
      tags:
        - v1Zones
      parameters:
        - $ref: '#/components/parameters/ZoneIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ZoneResponse'
    put:
      summary: Update zone
      operationId: updateZone
      tags:
        - v1Zones
      parameters:
        - $ref: '#/components/parameters/ZoneIdPV'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateZoneRequest'
      responses:
        '200':
          description: OK
    delete:
      summary: Delete zone
      operationId: deleteZone
      tags:
        - v1Zones
      parameters:
        - $ref: '#/components/parameters/ZoneIdPV'
      responses:
        '200':
          description: OK

  # ---------- v1Projects ----------
  /api/v1/projects:
    get:
      summary: Get projects
      operationId: listProjects
      tags:
        - v1Projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ListProjectsResponse'
    post:
      summary: Create project
      operationId: createProject
      tags:
        - v1Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateProjectRequest'
      responses:
        '200':
          description: OK
  /api/v1/projects/{projectId}:
    get:
      summary: Get project
      operationId: getProject
      tags:
        - v1Projects
      parameters:
        - $ref: '#/components/parameters/ProjectIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ProjectResponse'
    put:
      summary: Update project
      operationId: updateProject
      tags:
        - v1Projects
      parameters:
        - $ref: '#/components/parameters/ProjectIdPV'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateProjectRequest'
      responses:
        '200':
          description: OK
  /api/v1/projects/{projectId}/archive:
    put:
      summary: Archive project
      operationId: archiveProject
      tags:
        - v1Projects
      parameters:
        - $ref: '#/components/parameters/ProjectIdPV'
      responses:
        '200':
          description: OK
  /api/v1/projects/{projectId}/unarchive:
    put:
      summary: Unarchive project
      operationId: unarchiveProject
      tags:
        - v1Projects
      parameters:
        - $ref: '#/components/parameters/ProjectIdPV'
      responses:
        '200':
          description: OK

  # ---------- v1ManagedMongoDb ----------
  /api/v1/managed-mongodb/clusters:
    get:
      summary: Get MongoDB clusters
      operationId: listClusters
      tags:
        - v1ManagedMongoDb
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ListMongoClustersResponse'
    post:
      summary: Create MongoDB cluster
      operationId: createCluster
      tags:
        - v1ManagedMongoDb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateMongoClusterRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1CreateMongoClusterResponse'
  /api/v1/managed-mongodb/clusters/{clusterId}:
    get:
      summary: Get MongoDB cluster
      operationId: getCluster
      tags:
        - v1ManagedMongoDb
      parameters:
        - $ref: '#/components/parameters/ClusterIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1MongoClusterResponse'
    put:
      summary: Update MongoDB cluster
      operationId: updateCluster
      tags:
        - v1ManagedMongoDb
      parameters:
        - $ref: '#/components/parameters/ClusterIdPV'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1MongoUpdateClusterRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ScheduledOperationResponse'
    delete:
      summary: Delete MongoDB cluster
      operationId: deleteCluster
      tags:
        - v1ManagedMongoDb
      parameters:
        - $ref: '#/components/parameters/ClusterIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1DeleteMongoClusterResponse'
  /api/managed-mongodb/v1/clusters/{clusterId}/hosts:
    get:
      summary: Get MongoDB hosts
      operationId: listHosts
      tags:
        - v1ManagedMongoDb
      parameters:
        - $ref: '#/components/parameters/ClusterIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoListHostsResponse'
#    put:
#      summary: Scale MongoDB hosts
#      operationId: scaleHosts
#      tags:
#        - v1ManagedMongoDb
#      parameters:
#        - $ref: '#/components/parameters/ClusterIdPV'
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/V1MongoScaleHostsRequest'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/V1ScheduledOperationResponse'
#  /api/managed-mongodb/v1/hosts:
  /api/managed-mongodb/v1/clusters/{clusterId}/databases:
    get:
      summary: List MongoDB databases
      operationId: listDatabases
      tags:
        - v1ManagedMongoDb
      parameters:
        - $ref: '#/components/parameters/ClusterIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMongoDatabasesResponse'
    post:
      summary: Create MongoDB database
      operationId: createDatabase
      tags:
        - v1ManagedMongoDb
      parameters:
        - $ref: '#/components/parameters/ClusterIdPV'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMongoDatabaseRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ScheduledOperationResponse'
  /api/managed-mongodb/v1/clusters/{clusterId}/databases/{databaseId}:
    delete:
      summary: Delete MongoDB database
      operationId: deleteDatabase
      tags:
        - v1ManagedMongoDb
      parameters:
        - $ref: '#/components/parameters/ClusterIdPV'
        - $ref: '#/components/parameters/DatabaseIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ScheduledOperationResponse'
#  /api/managed-mongodb/v1/clusters/{clusterId}/users:
#    get:
#      summary: List MongoDB users
#      operationId: listUsers
#      tags:
#        - v1ManagedMongoDb
#      parameters:
#        - $ref: '#/components/parameters/ClusterIdPV'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ListMongoUsersResponse'
  /api/internal/managed-mongodb/v1/clusters/hosts:
    put:
      summary: Update MongoDB hosts
      operationId: updateHosts
      tags:
        - v1ManagedMongoDb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMongoHostsRequest'
      responses:
        '200':
          description: OK
# ---------- components ----------
components:
  # ---------- schemas ----------
  schemas:
    V1BadRequestResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    # ---------- v1ResourcePresets schemas ----------
    V1ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          type: array
          items:
            $ref: '#/components/schemas/V1ResourcePresetResponse'
      required:
        - resourcePresets
    V1ResourcePresetResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          $ref: '#/components/schemas/V1ResourcePresetType'
        vcpu:
          type: number
          format: double
        ram:
          type: integer
          format: int64
      required:
        - id
        - name
        - type
        - vcpu
        - ram
    V1CreateResourcePresetRequest:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/V1ResourcePresetType'
        vcpu:
          type: number
          format: double
        ram:
          type: integer
          format: int64
      required:
        - name
        - type
        - vcpu
        - ram
    V1UpdateResourcePresetRequest:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/V1ResourcePresetType'
        vcpu:
          type: number
          format: double
        ram:
          type: integer
          format: int64
      required:
        - name
        - type
        - vcpu
        - ram
    V1ResourcePresetType:
      type: string
      enum:
        - cpu_optimized
        - standard
        - ram_optimized
    V1ListZonesResponse:
      type: object
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/V1ZoneResponse'
      required:
        - zones
    V1ZoneResponse:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        selector:
          type: string
      required:
        - id
        - description
        - selector
    V1CreateZoneRequest:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        selector:
          type: string
      required:
        - id
        - description
        - selector
    V1UpdateZoneRequest:
      type: object
      properties:
        description:
          type: string
        selector:
          type: string
      required:
        - description
        - selector
    V1ListProjectsResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/V1ProjectResponse'
      required:
        - projects
    V1ProjectResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        productId:
          type: string
          format: uuid
        isArchived:
          type: boolean
      required:
        - id
        - name
        - description
        - productId
        - isArchived
    V1CreateProjectRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        productId:
          type: string
          format: uuid
      required:
        - name
        - description
        - productId
    V1UpdateProjectRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description
    V1ListMongoClustersResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/V1MongoClusterResponse'
      required:
        - clusters
    V1MongoClusterResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/V1ClusterStatusResponse'
        projectId:
          type: string
          format: uuid
        config:
          $ref: '#/components/schemas/V1MongoConfig'
      required:
        - id
        - name
        - description
        - status
        - projectId
        - config
    V1DeleteMongoClusterResponse:
      type: object
      properties:
        operationId:
          type: string
          format: uuid
      required:
        - operationId
    V1ClusterStatusResponse:
      type: object
      properties:
        value:
          type: string
        message:
          type: string
      required:
        - value
        - message
    V1MongoConfig:
      type: object
      properties:
        #        version:
        #          type: string
        resources:
          $ref: '#/components/schemas/V1ClusterResources'
        replicas:
          type: integer
          format: int32
      #        mongodbV8d0:
      #          $ref: '#/components/schemas/V1MongoConfigV8d0'
      required:
        - resources
        - replicas
    #    V1MongoConfigV8d0:
    #      type: object
    #      properties:
    #        mongod:
    #          $ref: '#/components/schemas/V1MongodV8d0'
    #      required:
    #        - mongod
    #    V1MongodV8d0:
    #      type: object
    #      properties:
    #        resources:
    #          $ref: '#/components/schemas/V1ClusterResources'
    #        config:
    #          $ref: '#/components/schemas/V1MongodConfigV8d0'
    #      required:
    #        - resources
    #        - config
    V1ClusterResources:
      type: object
      properties:
        presetId:
          type: string
          format: uuid
        storageClass:
          type: string
        storage:
          type: integer
          format: int64
      required:
        - presetId
        - storageClass
        - storage
    #    V1MongodConfigV8d0:
    #      type: object
    #      properties:
    #        net:
    #          $ref: '#/components/schemas/V1MongodNetV8d0'
    #      required:
    #        - net
    #    V1MongodNetV8d0:
    #      type: object
    #      properties:
    #        maxIncomingConnections:
    #          type: integer
    #          format: int32
    #      required:
    #        - maxIncomingConnections
    V1CreateMongoClusterRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        projectId:
          type: string
          format: uuid
        config:
          $ref: '#/components/schemas/V1MongoConfig'
      required:
        - name
        - description
        - projectId
        - config
    V1CreateMongoClusterResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    MongoListHostsResponse:
      type: object
      properties:
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/MongoHost'
      required:
        - hosts
    V1MongoScaleHostsRequest:
      type: object
      properties:
        replicas:
          type: integer
      required:
        - replicas
    V1ScheduledOperationResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    V1MongoUpdateClusterRequest:
      type: object
      properties:
        name:
          type: string
        config:
          $ref: '#/components/schemas/V1MongoConfig'
      required:
        - name
        - description
        - config
    UpdateMongoHostsRequest:
      type: object
      properties:
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/MongoHost'
    MongoHost:
      type: object
      properties:
        name:
          type: string
        clusterId:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/MongoHostType'
        status:
          $ref: '#/components/schemas/MongoHostStatus'
        role:
          $ref: '#/components/schemas/MongoHostRole'
      required:
        - name
        - clusterId
        - type
        - status
        - role
    MongoHostType:
      type: string
      enum:
        - unknown
        - mongod
    MongoHostStatus:
      type: string
      enum:
        - unknown
        - alive
        - dead
    MongoHostRole:
      type: string
      enum:
        - unknown
        - primary
        - secondary
    CreateMongoDatabaseRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    ListMongoDatabasesResponse:
      type: object
      properties:
        databases:
          type: array
          items:
            $ref: '#/components/schemas/MongoDatabase'
      required:
        - databases
    MongoDatabase:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        clusterId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: string
          format: uuid
          nullable: true
      required:
        - id
        - name
        - clusterId
        - createdAt
        - createdBy
        - isDeleted
        - deletedAt
        - deletedBy
#    ListMongoUsersResponse:
#      type: object
  # ---------- parameters ----------
  parameters:
    ResourcePresetIdPV:
      name: resourcePresetId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    ZoneIdPV:
      name: zoneId
      in: path
      required: true
      schema:
        type: string
    ProjectIdPV:
      name: projectId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    ClusterIdPV:
      name: clusterId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    DatabaseIdPV:
      name: databaseId
      in: path
      required: true
      schema:
        type: string
        format: uuid
