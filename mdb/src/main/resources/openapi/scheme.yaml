openapi: 3.0.0
info:
  version: 1.0.0
  title: onyxdb-mdb
servers:
  - url: http://localhost:9001
    description: localhost
paths:
  # ---------- v1ResourcePresets ----------
  /api/v1/resource-presets:
    get:
      summary: Get resource presets
      operationId: listResourcePresets
      tags:
        - v1ResourcePresets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ListResourcePresetsResponse'
    post:
      summary: Create resource preset
      operationId: createResourcePreset
      tags:
        - v1ResourcePresets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateResourcePresetRequest'
      responses:
        '200':
          description: OK
  /api/v1/resource-presets/{resourcePresetId}:
    get:
      summary: Get resource preset
      operationId: getResourcePreset
      tags:
        - v1ResourcePresets
      parameters:
        - $ref: '#/components/parameters/ResourcePresetIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ResourcePresetResponse'
    put:
      summary: Update resource preset
      operationId: updateResourcePreset
      tags:
        - v1ResourcePresets
      parameters:
        - $ref: '#/components/parameters/ResourcePresetIdPV'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateResourcePresetRequest'
      responses:
        '200':
          description: OK
    delete:
      summary: Delete resource preset
      operationId: deleteResourcePreset
      tags:
        - v1ResourcePresets
      parameters:
        - $ref: '#/components/parameters/ResourcePresetIdPV'
      responses:
        '200':
          description: OK

  # ---------- v1Zones ----------
  /api/v1/zones:
    get:
      summary: Get zones
      operationId: listZones
      tags:
        - v1Zones
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ListZonesResponse'
    post:
      summary: Create zone
      operationId: createZone
      tags:
        - v1Zones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateZoneRequest'
      responses:
        '200':
          description: OK
  /api/v1/zones/{zoneId}:
    get:
      summary: Get zone
      operationId: getZone
      tags:
        - v1Zones
      parameters:
        - $ref: '#/components/parameters/ZoneIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ZoneResponse'
    put:
      summary: Update zone
      operationId: updateZone
      tags:
        - v1Zones
      parameters:
        - $ref: '#/components/parameters/ZoneIdPV'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateZoneRequest'
      responses:
        '200':
          description: OK
    delete:
      summary: Delete zone
      operationId: deleteZone
      tags:
        - v1Zones
      parameters:
        - $ref: '#/components/parameters/ZoneIdPV'
      responses:
        '200':
          description: OK

  # ---------- v1Projects ----------
  /api/v1/projects:
    get:
      summary: Get projects
      operationId: listProjects
      tags:
        - v1Projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ListProjectsResponse'
    post:
      summary: Create project
      operationId: createProject
      tags:
        - v1Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateProjectRequest'
      responses:
        '200':
          description: OK
  /api/v1/projects/{projectId}:
    get:
      summary: Get project
      operationId: getProject
      tags:
        - v1Projects
      parameters:
        - $ref: '#/components/parameters/ProjectIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ProjectResponse'
    put:
      summary: Update project
      operationId: updateProject
      tags:
        - v1Projects
      parameters:
        - $ref: '#/components/parameters/ProjectIdPV'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1UpdateProjectRequest'
      responses:
        '200':
          description: OK
  /api/v1/projects/{projectId}/archive:
    put:
      summary: Archive project
      operationId: archiveProject
      tags:
        - v1Projects
      parameters:
        - $ref: '#/components/parameters/ProjectIdPV'
      responses:
        '200':
          description: OK
  /api/v1/projects/{projectId}/unarchive:
    put:
      summary: Unarchive project
      operationId: unarchiveProject
      tags:
        - v1Projects
      parameters:
        - $ref: '#/components/parameters/ProjectIdPV'
      responses:
        '200':
          description: OK

  # ---------- v1ManagedMongoDb ----------
  /api/v1/managed-mongodb/clusters:
    get:
      summary: Get MongoDB clusters
      operationId: listClusters
      tags:
        - v1ManagedMongoDb
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1ListMongoClustersResponse'
    post:
      summary: Create MongoDB cluster
      operationId: createCluster
      tags:
        - v1ManagedMongoDb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateMongoClusterRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1CreateMongoClusterResponse'
  /api/v1/managed-mongodb/clusters/{clusterId}:
    get:
      summary: Get MongoDB cluster
      operationId: getCluster
      tags:
        - v1ManagedMongoDb
      parameters:
        - $ref: '#/components/parameters/ClusterIdPV'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1MongoClusterResponse'

# ---------- components ----------
components:
  # ---------- schemas ----------
  schemas:
    V1BadRequestResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    # ---------- v1ResourcePresets schemas ----------
    V1ListResourcePresetsResponse:
      type: object
      properties:
        presets:
          type: array
          items:
            $ref: '#/components/schemas/V1ResourcePresetResponse'
      required:
        - presets
    V1ResourcePresetResponse:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/V1ResourcePresetType'
        vcpu:
          type: number
          format: double
        ram:
          type: integer
          format: int64
      required:
        - id
        - type
        - vcpu
        - ram
    V1CreateResourcePresetRequest:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/V1ResourcePresetType'
        vcpu:
          type: number
          format: double
        ram:
          type: integer
          format: int64
      required:
        - id
        - type
        - vcpu
        - ram
    V1UpdateResourcePresetRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/V1ResourcePresetType'
        vcpu:
          type: number
          format: double
        ram:
          type: integer
          format: int64
      required:
        - type
        - vcpu
        - ram
    V1ResourcePresetType:
      type: string
      enum:
        - cpu_optimized
        - standard
        - ram_optimized
    V1ListZonesResponse:
      type: object
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/V1ZoneResponse'
      required:
        - zones
    V1ZoneResponse:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        selector:
          type: string
      required:
        - id
        - description
        - selector
    V1CreateZoneRequest:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        selector:
          type: string
      required:
        - id
        - description
        - selector
    V1UpdateZoneRequest:
      type: object
      properties:
        description:
          type: string
        selector:
          type: string
      required:
        - description
        - selector
    V1ListProjectsResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/V1ProjectResponse'
      required:
        - projects
    V1ProjectResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        isArchived:
          type: boolean
      required:
        - id
        - name
        - description
        - isArchived
    V1CreateProjectRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description
    V1UpdateProjectRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description
    V1ListMongoClustersResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/V1MongoClusterResponse'
      required:
        - clusters
    V1MongoClusterResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/V1ClusterStatusResponse'
        projectId:
          type: string
          format: uuid
        config:
          $ref: '#/components/schemas/V1MongoConfig'
      required:
        - id
        - name
        - description
        - status
        - projectId
        - config
    V1ClusterStatusResponse:
      type: object
      properties:
        value:
          type: string
        message:
          type: string
      required:
        - value
        - message
    V1MongoConfig:
      type: object
      properties:
        version:
          type: string
        mongodbV8d0:
          $ref: '#/components/schemas/V1MongoConfigV8d0'
      required:
        - version
    V1MongoConfigV8d0:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/V1MongodV8d0'
      required:
        - mongod
    V1MongodV8d0:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/V1ClusterResources'
        config:
          $ref: '#/components/schemas/V1MongodConfigV8d0'
      required:
        - resources
        - config
    V1ClusterResources:
      type: object
      properties:
        presetId:
          type: string
        storageClass:
          type: string
        storage:
          type: integer
          format: int64
      required:
        - presetId
        - storageClass
        - storage
    V1MongodConfigV8d0:
      type: object
      properties:
        net:
          $ref: '#/components/schemas/V1MongodNetV8d0'
      required:
        - net
    V1MongodNetV8d0:
      type: object
      properties:
        maxIncomingConnections:
          type: integer
          format: int32
      required:
        - maxIncomingConnections
    V1CreateMongoClusterRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        projectId:
          type: string
          format: uuid
        config:
          $ref: '#/components/schemas/V1MongoConfig'
      required:
        - name
        - description
        - projectId
        - config
    V1CreateMongoClusterResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
  # ---------- parameters ----------
  parameters:
    ResourcePresetIdPV:
      name: resourcePresetId
      in: path
      required: true
      schema:
        type: string
    ZoneIdPV:
      name: zoneId
      in: path
      required: true
      schema:
        type: string
    ProjectIdPV:
      name: projectId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    ClusterIdPV:
      name: clusterId
      in: path
      required: true
      schema:
        type: string
        format: uuid
