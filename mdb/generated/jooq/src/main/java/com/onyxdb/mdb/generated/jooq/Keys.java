/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.mdb.generated.jooq;


import com.onyxdb.mdb.generated.jooq.tables.Cluster;
import com.onyxdb.mdb.generated.jooq.tables.ClusterOperation;
import com.onyxdb.mdb.generated.jooq.tables.ClusterOperationQueue;
import com.onyxdb.mdb.generated.jooq.tables.records.ClusterOperationQueueRecord;
import com.onyxdb.mdb.generated.jooq.tables.records.ClusterOperationRecord;
import com.onyxdb.mdb.generated.jooq.tables.records.ClusterRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ClusterRecord> CLUSTER_PKEY = Internal.createUniqueKey(Cluster.CLUSTER, DSL.name("cluster_pkey"), new TableField[] { Cluster.CLUSTER.ID }, true);
    public static final UniqueKey<ClusterOperationRecord> CLUSTER_OPERATION_PKEY = Internal.createUniqueKey(ClusterOperation.CLUSTER_OPERATION, DSL.name("cluster_operation_pkey"), new TableField[] { ClusterOperation.CLUSTER_OPERATION.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ClusterOperationRecord, ClusterRecord> CLUSTER_OPERATION__CLUSTER_OPERATION_CLUSTER_ID_FKEY = Internal.createForeignKey(ClusterOperation.CLUSTER_OPERATION, DSL.name("cluster_operation_cluster_id_fkey"), new TableField[] { ClusterOperation.CLUSTER_OPERATION.CLUSTER_ID }, Keys.CLUSTER_PKEY, new TableField[] { Cluster.CLUSTER.ID }, true);
    public static final ForeignKey<ClusterOperationQueueRecord, ClusterOperationRecord> CLUSTER_OPERATION_QUEUE__CLUSTER_OPERATION_QUEUE_ID_FKEY = Internal.createForeignKey(ClusterOperationQueue.CLUSTER_OPERATION_QUEUE, DSL.name("cluster_operation_queue_id_fkey"), new TableField[] { ClusterOperationQueue.CLUSTER_OPERATION_QUEUE.ID }, Keys.CLUSTER_OPERATION_PKEY, new TableField[] { ClusterOperation.CLUSTER_OPERATION.ID }, true);
}
