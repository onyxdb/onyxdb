/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.mdb.generated.jooq.tables.records;


import com.onyxdb.mdb.generated.jooq.enums.ClusterTaskStatus;
import com.onyxdb.mdb.generated.jooq.enums.ClusterOperationType;
import com.onyxdb.mdb.generated.jooq.tables.ClusterOperation;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClusterOperationRecord extends UpdatableRecordImpl<ClusterOperationRecord> implements Record7<UUID, UUID, ClusterOperationType, ClusterTaskStatus, LocalDateTime, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.cluster_operation.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.cluster_operation.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.cluster_operation.cluster_id</code>.
     */
    public void setClusterId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.cluster_operation.cluster_id</code>.
     */
    public UUID getClusterId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.cluster_operation.type</code>.
     */
    public void setType(ClusterOperationType value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.cluster_operation.type</code>.
     */
    public ClusterOperationType getType() {
        return (ClusterOperationType) get(2);
    }

    /**
     * Setter for <code>public.cluster_operation.status</code>.
     */
    public void setStatus(ClusterTaskStatus value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.cluster_operation.status</code>.
     */
    public ClusterTaskStatus getStatus() {
        return (ClusterTaskStatus) get(3);
    }

    /**
     * Setter for <code>public.cluster_operation.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.cluster_operation.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.cluster_operation.retries</code>.
     */
    public void setRetries(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.cluster_operation.retries</code>.
     */
    public Integer getRetries() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.cluster_operation.execute_at</code>.
     */
    public void setExecuteAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.cluster_operation.execute_at</code>.
     */
    public LocalDateTime getExecuteAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, ClusterOperationType, ClusterTaskStatus, LocalDateTime, Integer, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, ClusterOperationType, ClusterTaskStatus, LocalDateTime, Integer, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ClusterOperation.CLUSTER_OPERATION.ID;
    }

    @Override
    public Field<UUID> field2() {
        return ClusterOperation.CLUSTER_OPERATION.CLUSTER_ID;
    }

    @Override
    public Field<ClusterOperationType> field3() {
        return ClusterOperation.CLUSTER_OPERATION.TYPE;
    }

    @Override
    public Field<ClusterTaskStatus> field4() {
        return ClusterOperation.CLUSTER_OPERATION.STATUS;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return ClusterOperation.CLUSTER_OPERATION.CREATED_AT;
    }

    @Override
    public Field<Integer> field6() {
        return ClusterOperation.CLUSTER_OPERATION.RETRIES;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return ClusterOperation.CLUSTER_OPERATION.EXECUTE_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getClusterId();
    }

    @Override
    public ClusterOperationType component3() {
        return getType();
    }

    @Override
    public ClusterTaskStatus component4() {
        return getStatus();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public Integer component6() {
        return getRetries();
    }

    @Override
    public LocalDateTime component7() {
        return getExecuteAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getClusterId();
    }

    @Override
    public ClusterOperationType value3() {
        return getType();
    }

    @Override
    public ClusterTaskStatus value4() {
        return getStatus();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public Integer value6() {
        return getRetries();
    }

    @Override
    public LocalDateTime value7() {
        return getExecuteAt();
    }

    @Override
    public ClusterOperationRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ClusterOperationRecord value2(UUID value) {
        setClusterId(value);
        return this;
    }

    @Override
    public ClusterOperationRecord value3(ClusterOperationType value) {
        setType(value);
        return this;
    }

    @Override
    public ClusterOperationRecord value4(ClusterTaskStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public ClusterOperationRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ClusterOperationRecord value6(Integer value) {
        setRetries(value);
        return this;
    }

    @Override
    public ClusterOperationRecord value7(LocalDateTime value) {
        setExecuteAt(value);
        return this;
    }

    @Override
    public ClusterOperationRecord values(UUID value1, UUID value2, ClusterOperationType value3, ClusterTaskStatus value4, LocalDateTime value5, Integer value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClusterOperationRecord
     */
    public ClusterOperationRecord() {
        super(ClusterOperation.CLUSTER_OPERATION);
    }

    /**
     * Create a detached, initialised ClusterOperationRecord
     */
    public ClusterOperationRecord(UUID id, UUID clusterId, ClusterOperationType type, ClusterTaskStatus status, LocalDateTime createdAt, Integer retries, LocalDateTime executeAt) {
        super(ClusterOperation.CLUSTER_OPERATION);

        setId(id);
        setClusterId(clusterId);
        setType(type);
        setStatus(status);
        setCreatedAt(createdAt);
        setRetries(retries);
        setExecuteAt(executeAt);
    }
}
