/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.mdb.generated.jooq.tables.records;


import com.onyxdb.mdb.generated.jooq.tables.ClusterTasksToBlockerTasks;

import java.util.UUID;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ClusterTasksToBlockerTasksRecord extends UpdatableRecordImpl<ClusterTasksToBlockerTasksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.cluster_tasks_to_blocker_tasks.task_id</code>.
     */
    public void setTaskId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.cluster_tasks_to_blocker_tasks.task_id</code>.
     */
    public UUID getTaskId() {
        return (UUID) get(0);
    }

    /**
     * Setter for
     * <code>public.cluster_tasks_to_blocker_tasks.blocker_task_id</code>.
     */
    public void setBlockerTaskId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>public.cluster_tasks_to_blocker_tasks.blocker_task_id</code>.
     */
    public UUID getBlockerTaskId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClusterTasksToBlockerTasksRecord
     */
    public ClusterTasksToBlockerTasksRecord() {
        super(ClusterTasksToBlockerTasks.CLUSTER_TASKS_TO_BLOCKER_TASKS);
    }

    /**
     * Create a detached, initialised ClusterTasksToBlockerTasksRecord
     */
    public ClusterTasksToBlockerTasksRecord(UUID taskId, UUID blockerTaskId) {
        super(ClusterTasksToBlockerTasks.CLUSTER_TASKS_TO_BLOCKER_TASKS);

        setTaskId(taskId);
        setBlockerTaskId(blockerTaskId);
        resetChangedOnNotNull();
    }
}
