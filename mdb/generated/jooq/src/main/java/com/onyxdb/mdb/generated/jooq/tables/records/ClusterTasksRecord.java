/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.mdb.generated.jooq.tables.records;


import com.onyxdb.mdb.generated.jooq.enums.ClusterTaskStatus;
import com.onyxdb.mdb.generated.jooq.enums.ClusterTaskType;
import com.onyxdb.mdb.generated.jooq.enums.ClusterType;
import com.onyxdb.mdb.generated.jooq.tables.ClusterTasks;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClusterTasksRecord extends UpdatableRecordImpl<ClusterTasksRecord> implements Record12<UUID, UUID, UUID, ClusterType, ClusterTaskType, ClusterTaskStatus, LocalDateTime, LocalDateTime, LocalDateTime, Integer, UUID[], Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.cluster_tasks.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.cluster_tasks.cluster_id</code>.
     */
    public void setClusterId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.cluster_id</code>.
     */
    public UUID getClusterId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.cluster_tasks.operation_id</code>.
     */
    public void setOperationId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.operation_id</code>.
     */
    public UUID getOperationId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.cluster_tasks.cluster_type</code>.
     */
    public void setClusterType(ClusterType value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.cluster_type</code>.
     */
    public ClusterType getClusterType() {
        return (ClusterType) get(3);
    }

    /**
     * Setter for <code>public.cluster_tasks.type</code>.
     */
    public void setType(ClusterTaskType value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.type</code>.
     */
    public ClusterTaskType getType() {
        return (ClusterTaskType) get(4);
    }

    /**
     * Setter for <code>public.cluster_tasks.status</code>.
     */
    public void setStatus(ClusterTaskStatus value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.status</code>.
     */
    public ClusterTaskStatus getStatus() {
        return (ClusterTaskStatus) get(5);
    }

    /**
     * Setter for <code>public.cluster_tasks.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.cluster_tasks.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.cluster_tasks.scheduled_at</code>.
     */
    public void setScheduledAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.scheduled_at</code>.
     */
    public LocalDateTime getScheduledAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>public.cluster_tasks.retries_left</code>.
     */
    public void setRetriesLeft(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.retries_left</code>.
     */
    public Integer getRetriesLeft() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.cluster_tasks.depends_on_task_ids</code>.
     */
    public void setDependsOnTaskIds(UUID[] value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.depends_on_task_ids</code>.
     */
    public UUID[] getDependsOnTaskIds() {
        return (UUID[]) get(10);
    }

    /**
     * Setter for <code>public.cluster_tasks.is_last</code>.
     */
    public void setIsLast(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.cluster_tasks.is_last</code>.
     */
    public Boolean getIsLast() {
        return (Boolean) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<UUID, UUID, UUID, ClusterType, ClusterTaskType, ClusterTaskStatus, LocalDateTime, LocalDateTime, LocalDateTime, Integer, UUID[], Boolean> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<UUID, UUID, UUID, ClusterType, ClusterTaskType, ClusterTaskStatus, LocalDateTime, LocalDateTime, LocalDateTime, Integer, UUID[], Boolean> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ClusterTasks.CLUSTER_TASKS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return ClusterTasks.CLUSTER_TASKS.CLUSTER_ID;
    }

    @Override
    public Field<UUID> field3() {
        return ClusterTasks.CLUSTER_TASKS.OPERATION_ID;
    }

    @Override
    public Field<ClusterType> field4() {
        return ClusterTasks.CLUSTER_TASKS.CLUSTER_TYPE;
    }

    @Override
    public Field<ClusterTaskType> field5() {
        return ClusterTasks.CLUSTER_TASKS.TYPE;
    }

    @Override
    public Field<ClusterTaskStatus> field6() {
        return ClusterTasks.CLUSTER_TASKS.STATUS;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return ClusterTasks.CLUSTER_TASKS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return ClusterTasks.CLUSTER_TASKS.UPDATED_AT;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return ClusterTasks.CLUSTER_TASKS.SCHEDULED_AT;
    }

    @Override
    public Field<Integer> field10() {
        return ClusterTasks.CLUSTER_TASKS.RETRIES_LEFT;
    }

    @Override
    public Field<UUID[]> field11() {
        return ClusterTasks.CLUSTER_TASKS.DEPENDS_ON_TASK_IDS;
    }

    @Override
    public Field<Boolean> field12() {
        return ClusterTasks.CLUSTER_TASKS.IS_LAST;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getClusterId();
    }

    @Override
    public UUID component3() {
        return getOperationId();
    }

    @Override
    public ClusterType component4() {
        return getClusterType();
    }

    @Override
    public ClusterTaskType component5() {
        return getType();
    }

    @Override
    public ClusterTaskStatus component6() {
        return getStatus();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime component9() {
        return getScheduledAt();
    }

    @Override
    public Integer component10() {
        return getRetriesLeft();
    }

    @Override
    public UUID[] component11() {
        return getDependsOnTaskIds();
    }

    @Override
    public Boolean component12() {
        return getIsLast();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getClusterId();
    }

    @Override
    public UUID value3() {
        return getOperationId();
    }

    @Override
    public ClusterType value4() {
        return getClusterType();
    }

    @Override
    public ClusterTaskType value5() {
        return getType();
    }

    @Override
    public ClusterTaskStatus value6() {
        return getStatus();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime value9() {
        return getScheduledAt();
    }

    @Override
    public Integer value10() {
        return getRetriesLeft();
    }

    @Override
    public UUID[] value11() {
        return getDependsOnTaskIds();
    }

    @Override
    public Boolean value12() {
        return getIsLast();
    }

    @Override
    public ClusterTasksRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value2(UUID value) {
        setClusterId(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value3(UUID value) {
        setOperationId(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value4(ClusterType value) {
        setClusterType(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value5(ClusterTaskType value) {
        setType(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value6(ClusterTaskStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value9(LocalDateTime value) {
        setScheduledAt(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value10(Integer value) {
        setRetriesLeft(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value11(UUID[] value) {
        setDependsOnTaskIds(value);
        return this;
    }

    @Override
    public ClusterTasksRecord value12(Boolean value) {
        setIsLast(value);
        return this;
    }

    @Override
    public ClusterTasksRecord values(UUID value1, UUID value2, UUID value3, ClusterType value4, ClusterTaskType value5, ClusterTaskStatus value6, LocalDateTime value7, LocalDateTime value8, LocalDateTime value9, Integer value10, UUID[] value11, Boolean value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClusterTasksRecord
     */
    public ClusterTasksRecord() {
        super(ClusterTasks.CLUSTER_TASKS);
    }

    /**
     * Create a detached, initialised ClusterTasksRecord
     */
    public ClusterTasksRecord(UUID id, UUID clusterId, UUID operationId, ClusterType clusterType, ClusterTaskType type, ClusterTaskStatus status, LocalDateTime createdAt, LocalDateTime updatedAt, LocalDateTime scheduledAt, Integer retriesLeft, UUID[] dependsOnTaskIds, Boolean isLast) {
        super(ClusterTasks.CLUSTER_TASKS);

        setId(id);
        setClusterId(clusterId);
        setOperationId(operationId);
        setClusterType(clusterType);
        setType(type);
        setStatus(status);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setScheduledAt(scheduledAt);
        setRetriesLeft(retriesLeft);
        setDependsOnTaskIds(dependsOnTaskIds);
        setIsLast(isLast);
    }
}
