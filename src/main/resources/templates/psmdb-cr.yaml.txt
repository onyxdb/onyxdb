apiVersion: psmdb.percona.com/v1
kind: PerconaServerMongoDB
metadata:
  name: [[${METADATA_NAME}]]
  finalizers:
   - percona.com/delete-psmdb-pvc
spec:
  crVersion: 1.19.1
  image: percona/percona-server-mongodb:7.0.15-9-multi
  imagePullPolicy: IfNotPresent
  unsafeFlags:
    replsetSize: true
  upgradeOptions:
    apply: disabled
  secrets:
    users: [[${SECRETS_USERS_NAME}]]
  enableVolumeExpansion: false
  replsets:
    - name: [[${REPLSET_NAME}]]
      size: [[${REPLSET_SIZE}]]
      labels:
        onyxdb.com/project: sandbox
        onyxdb.com/cluster: test-1
      configuration: |
        processManagement:
          pidFilePath: /data/db/mongod.pid
        security:
            enableEncryption: true
            encryptionCipherMode: "AES256-CBC"
      affinity:
        advanced:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/os
                      operator: In
                      values:
                        - linux
      sidecars:
        - image: percona/mongodb_exporter:0.44
          env:
            - name: EXPORTER_USER
              valueFrom:
                secretKeyRef:
                  name: [[${SECRETS_USERS_NAME}]]
                  key: MONGODB_DATABASE_ADMIN_USER
            - name: EXPORTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: [[${SECRETS_USERS_NAME}]]
                  key: MONGODB_DATABASE_ADMIN_PASSWORD
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MONGODB_URI
              value: "mongodb://$(EXPORTER_USER):$(EXPORTER_PASSWORD)@$(POD_IP):27017"
          args:
            - "--discovering-mode"
            - "--compatible-mode"
            - "--collect-all"
            - "--log.level=debug"
            - "--mongodb.uri=$(MONGODB_URI)"
          name: exporter
#        - name: vector
#          image: timberio/vector:0.31.0-debian
#          command:
#            - vector
#          args:
#            - --config=/etc/vector/vector.yaml
#          workingDir: /data/db
#          volumeMounts:
#            - name: vector-config
#              mountPath: /etc/vector
#            - name: mongod-data
#              mountPath: /data/db
#        - name: logrotate
#          image: docker.io/kicm/logrotate
#          command:
#            - tail
#          args:
#            - -f
#            - /dev/null
#          workingDir: /data/db
#          volumeMounts:
#            - name: logrotate-config
#              mountPath: /etc/logrotate.d
#            - name: mongod-data
#              mountPath: /data/db
#        - name: logrotate
#          image: foxleren/onyxdb-mongod-logrotate:17
#          workingDir: /data/db
#          volumeMounts:
#            - name: mongod-data
#              mountPath: /data/db
      sidecarVolumes:
        - name: vector-config
          configMap:
            name: [[${VECTOR_CONFIG_NAME}]]
#        - name: logrotate-config
#          configMap:
#            name: mongod-logrotate
      resources:
        limits:
          cpu: "[[${MONGOD_CPU}]]"
          memory: "[[${MONGOD_MEMORY}]]"
        requests:
          cpu: "[[${MONGOD_CPU}]]"
          memory: "[[${MONGOD_MEMORY}]]"
      volumeSpec:
        persistentVolumeClaim:
          resources:
            requests:
              storage: 1Gi
  sharding:
    enabled: false
