spring:
  application:
    name: onyxdb
  task:
    scheduling:
      pool:
        size: 5
  graphql:
    cors:
      allowed-methods=POST:
    graphiql:
      enabled: true
    schema:
      #      locations=classpath*:/:
      locations=classpath*:graphql/**/:

server:
  port: 9001

springdoc:
  swagger-ui:
    path: /swagger-ui
  api-docs:
    path: /api-docs

logging:
  level:
    org:
      jooq:
        Constants: off

onyxdb:
  mdb:
    self-url: http://host.minikube.internal:9001
    namespaces: onyxdb
    storage-classes: standard
  agent:
    base-url: http://localhost:9004
  postgres:
    url: jdbc:postgresql://localhost:5432/onyxdb
    username: postgres
    password: password
  redis:
    host: localhost
    port: 6379
  clickhouse:
    url: jdbc:clickhouse://localhost:8123/onyxdb
    username: ""
    password: ""
  minio:
    url: http://minio.onyxdb.svc.cluster.local:9000
    secret: minio-onyxdb
    bucket: onyxdb
  victoria-logs:
    base-url: http://vlogs-onyxdb.onyxdb.svc.cluster.local:9428
  flyway:
    postgres:
      location: db/migrations/postgres
    clickhouse:
      location: db/migrations/clickhouse
  tasks:
    collect-product-quota-usage:
      fixed-rate: PT1S
      lock-at-least-for: 1s
      lock-at-most-for: 1s
  workers:
    process-cluster-tasks:
      min-threads: 1
      max-threads: 5
      polling-interval-seconds: 1
  jwt-token:
    salt-jwt: ${JWT_TOKEN_SALT_JWT:ns9ozm2ani3oc6xo4pozoijxsperv8rpo1bsdijvdlpszq}
    salt-refresh: ${JWT_TOKEN_SALT_REFRESH:nn9ozm2ani3oc6xo4pozoijxsperv8rpo1bsdijvdlpszq}
    expiration: ${JWT_TOKEN_EXPIRATION:5 } # minutes
