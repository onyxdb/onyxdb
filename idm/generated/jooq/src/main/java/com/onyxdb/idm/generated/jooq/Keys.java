/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.idm.generated.jooq;


import com.onyxdb.idm.generated.jooq.tables.Account;
import com.onyxdb.idm.generated.jooq.tables.AccountBusinessRole;
import com.onyxdb.idm.generated.jooq.tables.AccountOu;
import com.onyxdb.idm.generated.jooq.tables.AccountResourceRole;
import com.onyxdb.idm.generated.jooq.tables.AccountRole;
import com.onyxdb.idm.generated.jooq.tables.BusinessRole;
import com.onyxdb.idm.generated.jooq.tables.BusinessRoleRole;
import com.onyxdb.idm.generated.jooq.tables.DomainComponent;
import com.onyxdb.idm.generated.jooq.tables.Organization;
import com.onyxdb.idm.generated.jooq.tables.OrganizationUnit;
import com.onyxdb.idm.generated.jooq.tables.Permission;
import com.onyxdb.idm.generated.jooq.tables.Project;
import com.onyxdb.idm.generated.jooq.tables.Resource;
import com.onyxdb.idm.generated.jooq.tables.Role;
import com.onyxdb.idm.generated.jooq.tables.RolePermission;
import com.onyxdb.idm.generated.jooq.tables.Service;
import com.onyxdb.idm.generated.jooq.tables.records.AccountBusinessRoleRecord;
import com.onyxdb.idm.generated.jooq.tables.records.AccountOuRecord;
import com.onyxdb.idm.generated.jooq.tables.records.AccountRecord;
import com.onyxdb.idm.generated.jooq.tables.records.AccountResourceRoleRecord;
import com.onyxdb.idm.generated.jooq.tables.records.AccountRoleRecord;
import com.onyxdb.idm.generated.jooq.tables.records.BusinessRoleRecord;
import com.onyxdb.idm.generated.jooq.tables.records.BusinessRoleRoleRecord;
import com.onyxdb.idm.generated.jooq.tables.records.DomainComponentRecord;
import com.onyxdb.idm.generated.jooq.tables.records.OrganizationRecord;
import com.onyxdb.idm.generated.jooq.tables.records.OrganizationUnitRecord;
import com.onyxdb.idm.generated.jooq.tables.records.PermissionRecord;
import com.onyxdb.idm.generated.jooq.tables.records.ProjectRecord;
import com.onyxdb.idm.generated.jooq.tables.records.ResourceRecord;
import com.onyxdb.idm.generated.jooq.tables.records.RolePermissionRecord;
import com.onyxdb.idm.generated.jooq.tables.records.RoleRecord;
import com.onyxdb.idm.generated.jooq.tables.records.ServiceRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT_EMAIL_KEY = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("account_email_key"), new TableField[] { Account.ACCOUNT.EMAIL }, true);
    public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("account_pkey"), new TableField[] { Account.ACCOUNT.ID }, true);
    public static final UniqueKey<AccountRecord> ACCOUNT_USERNAME_KEY = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("account_username_key"), new TableField[] { Account.ACCOUNT.USERNAME }, true);
    public static final UniqueKey<AccountBusinessRoleRecord> ACCOUNT_BUSINESS_ROLE_PKEY = Internal.createUniqueKey(AccountBusinessRole.ACCOUNT_BUSINESS_ROLE, DSL.name("account_business_role_pkey"), new TableField[] { AccountBusinessRole.ACCOUNT_BUSINESS_ROLE.ACCOUNT_ID, AccountBusinessRole.ACCOUNT_BUSINESS_ROLE.BUSINESS_ROLE_ID }, true);
    public static final UniqueKey<AccountOuRecord> ACCOUNT_OU_PKEY = Internal.createUniqueKey(AccountOu.ACCOUNT_OU, DSL.name("account_ou_pkey"), new TableField[] { AccountOu.ACCOUNT_OU.ACCOUNT_ID, AccountOu.ACCOUNT_OU.OU_ID }, true);
    public static final UniqueKey<AccountResourceRoleRecord> ACCOUNT_RESOURCE_ROLE_PKEY = Internal.createUniqueKey(AccountResourceRole.ACCOUNT_RESOURCE_ROLE, DSL.name("account_resource_role_pkey"), new TableField[] { AccountResourceRole.ACCOUNT_RESOURCE_ROLE.ACCOUNT_ID, AccountResourceRole.ACCOUNT_RESOURCE_ROLE.RESOURCE_ID, AccountResourceRole.ACCOUNT_RESOURCE_ROLE.ROLE_ID }, true);
    public static final UniqueKey<AccountRoleRecord> ACCOUNT_ROLE_PKEY = Internal.createUniqueKey(AccountRole.ACCOUNT_ROLE, DSL.name("account_role_pkey"), new TableField[] { AccountRole.ACCOUNT_ROLE.ACCOUNT_ID, AccountRole.ACCOUNT_ROLE.ROLE_ID }, true);
    public static final UniqueKey<BusinessRoleRecord> BUSINESS_ROLE_NAME_KEY = Internal.createUniqueKey(BusinessRole.BUSINESS_ROLE, DSL.name("business_role_name_key"), new TableField[] { BusinessRole.BUSINESS_ROLE.NAME }, true);
    public static final UniqueKey<BusinessRoleRecord> BUSINESS_ROLE_PKEY = Internal.createUniqueKey(BusinessRole.BUSINESS_ROLE, DSL.name("business_role_pkey"), new TableField[] { BusinessRole.BUSINESS_ROLE.ID }, true);
    public static final UniqueKey<BusinessRoleRoleRecord> BUSINESS_ROLE_ROLE_PKEY = Internal.createUniqueKey(BusinessRoleRole.BUSINESS_ROLE_ROLE, DSL.name("business_role_role_pkey"), new TableField[] { BusinessRoleRole.BUSINESS_ROLE_ROLE.BUSINESS_ROLE_ID, BusinessRoleRole.BUSINESS_ROLE_ROLE.ROLE_ID }, true);
    public static final UniqueKey<DomainComponentRecord> DOMAIN_COMPONENT_NAME_KEY = Internal.createUniqueKey(DomainComponent.DOMAIN_COMPONENT, DSL.name("domain_component_name_key"), new TableField[] { DomainComponent.DOMAIN_COMPONENT.NAME }, true);
    public static final UniqueKey<DomainComponentRecord> DOMAIN_COMPONENT_PKEY = Internal.createUniqueKey(DomainComponent.DOMAIN_COMPONENT, DSL.name("domain_component_pkey"), new TableField[] { DomainComponent.DOMAIN_COMPONENT.ID }, true);
    public static final UniqueKey<OrganizationRecord> ORGANIZATION_PKEY = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("organization_pkey"), new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final UniqueKey<OrganizationRecord> ORGANIZATION_RESOURCE_ID_KEY = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("organization_resource_id_key"), new TableField[] { Organization.ORGANIZATION.RESOURCE_ID }, true);
    public static final UniqueKey<OrganizationUnitRecord> ORGANIZATION_UNIT_PKEY = Internal.createUniqueKey(OrganizationUnit.ORGANIZATION_UNIT, DSL.name("organization_unit_pkey"), new TableField[] { OrganizationUnit.ORGANIZATION_UNIT.ID }, true);
    public static final UniqueKey<PermissionRecord> PERMISSION_PKEY = Internal.createUniqueKey(Permission.PERMISSION, DSL.name("permission_pkey"), new TableField[] { Permission.PERMISSION.ID }, true);
    public static final UniqueKey<ProjectRecord> PROJECT_ORGANIZATION_ID_KEY = Internal.createUniqueKey(Project.PROJECT, DSL.name("project_organization_id_key"), new TableField[] { Project.PROJECT.ORGANIZATION_ID }, true);
    public static final UniqueKey<ProjectRecord> PROJECT_PKEY = Internal.createUniqueKey(Project.PROJECT, DSL.name("project_pkey"), new TableField[] { Project.PROJECT.ID }, true);
    public static final UniqueKey<ProjectRecord> PROJECT_RESOURCE_ID_KEY = Internal.createUniqueKey(Project.PROJECT, DSL.name("project_resource_id_key"), new TableField[] { Project.PROJECT.RESOURCE_ID }, true);
    public static final UniqueKey<ResourceRecord> RESOURCE_PKEY = Internal.createUniqueKey(Resource.RESOURCE, DSL.name("resource_pkey"), new TableField[] { Resource.RESOURCE.ID }, true);
    public static final UniqueKey<RoleRecord> ROLE_NAME_KEY = Internal.createUniqueKey(Role.ROLE, DSL.name("role_name_key"), new TableField[] { Role.ROLE.NAME }, true);
    public static final UniqueKey<RoleRecord> ROLE_PKEY = Internal.createUniqueKey(Role.ROLE, DSL.name("role_pkey"), new TableField[] { Role.ROLE.ID }, true);
    public static final UniqueKey<RolePermissionRecord> ROLE_PERMISSION_PKEY = Internal.createUniqueKey(RolePermission.ROLE_PERMISSION, DSL.name("role_permission_pkey"), new TableField[] { RolePermission.ROLE_PERMISSION.ROLE_ID, RolePermission.ROLE_PERMISSION.PERMISSION_ID }, true);
    public static final UniqueKey<ServiceRecord> SERVICE_PKEY = Internal.createUniqueKey(Service.SERVICE, DSL.name("service_pkey"), new TableField[] { Service.SERVICE.ID }, true);
    public static final UniqueKey<ServiceRecord> SERVICE_PROJECT_ID_KEY = Internal.createUniqueKey(Service.SERVICE, DSL.name("service_project_id_key"), new TableField[] { Service.SERVICE.PROJECT_ID }, true);
    public static final UniqueKey<ServiceRecord> SERVICE_RESOURCE_ID_KEY = Internal.createUniqueKey(Service.SERVICE, DSL.name("service_resource_id_key"), new TableField[] { Service.SERVICE.RESOURCE_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountBusinessRoleRecord, AccountRecord> ACCOUNT_BUSINESS_ROLE__ACCOUNT_BUSINESS_ROLE_ACCOUNT_ID_FKEY = Internal.createForeignKey(AccountBusinessRole.ACCOUNT_BUSINESS_ROLE, DSL.name("account_business_role_account_id_fkey"), new TableField[] { AccountBusinessRole.ACCOUNT_BUSINESS_ROLE.ACCOUNT_ID }, Keys.ACCOUNT_PKEY, new TableField[] { Account.ACCOUNT.ID }, true);
    public static final ForeignKey<AccountBusinessRoleRecord, BusinessRoleRecord> ACCOUNT_BUSINESS_ROLE__ACCOUNT_BUSINESS_ROLE_BUSINESS_ROLE_ID_FKEY = Internal.createForeignKey(AccountBusinessRole.ACCOUNT_BUSINESS_ROLE, DSL.name("account_business_role_business_role_id_fkey"), new TableField[] { AccountBusinessRole.ACCOUNT_BUSINESS_ROLE.BUSINESS_ROLE_ID }, Keys.BUSINESS_ROLE_PKEY, new TableField[] { BusinessRole.BUSINESS_ROLE.ID }, true);
    public static final ForeignKey<AccountOuRecord, AccountRecord> ACCOUNT_OU__ACCOUNT_OU_ACCOUNT_ID_FKEY = Internal.createForeignKey(AccountOu.ACCOUNT_OU, DSL.name("account_ou_account_id_fkey"), new TableField[] { AccountOu.ACCOUNT_OU.ACCOUNT_ID }, Keys.ACCOUNT_PKEY, new TableField[] { Account.ACCOUNT.ID }, true);
    public static final ForeignKey<AccountOuRecord, OrganizationUnitRecord> ACCOUNT_OU__ACCOUNT_OU_OU_ID_FKEY = Internal.createForeignKey(AccountOu.ACCOUNT_OU, DSL.name("account_ou_ou_id_fkey"), new TableField[] { AccountOu.ACCOUNT_OU.OU_ID }, Keys.ORGANIZATION_UNIT_PKEY, new TableField[] { OrganizationUnit.ORGANIZATION_UNIT.ID }, true);
    public static final ForeignKey<AccountResourceRoleRecord, AccountRecord> ACCOUNT_RESOURCE_ROLE__ACCOUNT_RESOURCE_ROLE_ACCOUNT_ID_FKEY = Internal.createForeignKey(AccountResourceRole.ACCOUNT_RESOURCE_ROLE, DSL.name("account_resource_role_account_id_fkey"), new TableField[] { AccountResourceRole.ACCOUNT_RESOURCE_ROLE.ACCOUNT_ID }, Keys.ACCOUNT_PKEY, new TableField[] { Account.ACCOUNT.ID }, true);
    public static final ForeignKey<AccountResourceRoleRecord, ResourceRecord> ACCOUNT_RESOURCE_ROLE__ACCOUNT_RESOURCE_ROLE_RESOURCE_ID_FKEY = Internal.createForeignKey(AccountResourceRole.ACCOUNT_RESOURCE_ROLE, DSL.name("account_resource_role_resource_id_fkey"), new TableField[] { AccountResourceRole.ACCOUNT_RESOURCE_ROLE.RESOURCE_ID }, Keys.RESOURCE_PKEY, new TableField[] { Resource.RESOURCE.ID }, true);
    public static final ForeignKey<AccountResourceRoleRecord, RoleRecord> ACCOUNT_RESOURCE_ROLE__ACCOUNT_RESOURCE_ROLE_ROLE_ID_FKEY = Internal.createForeignKey(AccountResourceRole.ACCOUNT_RESOURCE_ROLE, DSL.name("account_resource_role_role_id_fkey"), new TableField[] { AccountResourceRole.ACCOUNT_RESOURCE_ROLE.ROLE_ID }, Keys.ROLE_PKEY, new TableField[] { Role.ROLE.ID }, true);
    public static final ForeignKey<AccountRoleRecord, AccountRecord> ACCOUNT_ROLE__ACCOUNT_ROLE_ACCOUNT_ID_FKEY = Internal.createForeignKey(AccountRole.ACCOUNT_ROLE, DSL.name("account_role_account_id_fkey"), new TableField[] { AccountRole.ACCOUNT_ROLE.ACCOUNT_ID }, Keys.ACCOUNT_PKEY, new TableField[] { Account.ACCOUNT.ID }, true);
    public static final ForeignKey<AccountRoleRecord, RoleRecord> ACCOUNT_ROLE__ACCOUNT_ROLE_ROLE_ID_FKEY = Internal.createForeignKey(AccountRole.ACCOUNT_ROLE, DSL.name("account_role_role_id_fkey"), new TableField[] { AccountRole.ACCOUNT_ROLE.ROLE_ID }, Keys.ROLE_PKEY, new TableField[] { Role.ROLE.ID }, true);
    public static final ForeignKey<BusinessRoleRecord, BusinessRoleRecord> BUSINESS_ROLE__BUSINESS_ROLE_PARENT_ID_FKEY = Internal.createForeignKey(BusinessRole.BUSINESS_ROLE, DSL.name("business_role_parent_id_fkey"), new TableField[] { BusinessRole.BUSINESS_ROLE.PARENT_ID }, Keys.BUSINESS_ROLE_PKEY, new TableField[] { BusinessRole.BUSINESS_ROLE.ID }, true);
    public static final ForeignKey<BusinessRoleRoleRecord, BusinessRoleRecord> BUSINESS_ROLE_ROLE__BUSINESS_ROLE_ROLE_BUSINESS_ROLE_ID_FKEY = Internal.createForeignKey(BusinessRoleRole.BUSINESS_ROLE_ROLE, DSL.name("business_role_role_business_role_id_fkey"), new TableField[] { BusinessRoleRole.BUSINESS_ROLE_ROLE.BUSINESS_ROLE_ID }, Keys.BUSINESS_ROLE_PKEY, new TableField[] { BusinessRole.BUSINESS_ROLE.ID }, true);
    public static final ForeignKey<BusinessRoleRoleRecord, RoleRecord> BUSINESS_ROLE_ROLE__BUSINESS_ROLE_ROLE_ROLE_ID_FKEY = Internal.createForeignKey(BusinessRoleRole.BUSINESS_ROLE_ROLE, DSL.name("business_role_role_role_id_fkey"), new TableField[] { BusinessRoleRole.BUSINESS_ROLE_ROLE.ROLE_ID }, Keys.ROLE_PKEY, new TableField[] { Role.ROLE.ID }, true);
    public static final ForeignKey<OrganizationRecord, ResourceRecord> ORGANIZATION__ORGANIZATION_RESOURCE_ID_FKEY = Internal.createForeignKey(Organization.ORGANIZATION, DSL.name("organization_resource_id_fkey"), new TableField[] { Organization.ORGANIZATION.RESOURCE_ID }, Keys.RESOURCE_PKEY, new TableField[] { Resource.RESOURCE.ID }, true);
    public static final ForeignKey<OrganizationUnitRecord, DomainComponentRecord> ORGANIZATION_UNIT__ORGANIZATION_UNIT_DOMAIN_COMPONENT_ID_FKEY = Internal.createForeignKey(OrganizationUnit.ORGANIZATION_UNIT, DSL.name("organization_unit_domain_component_id_fkey"), new TableField[] { OrganizationUnit.ORGANIZATION_UNIT.DOMAIN_COMPONENT_ID }, Keys.DOMAIN_COMPONENT_PKEY, new TableField[] { DomainComponent.DOMAIN_COMPONENT.ID }, true);
    public static final ForeignKey<OrganizationUnitRecord, OrganizationUnitRecord> ORGANIZATION_UNIT__ORGANIZATION_UNIT_PARENT_ID_FKEY = Internal.createForeignKey(OrganizationUnit.ORGANIZATION_UNIT, DSL.name("organization_unit_parent_id_fkey"), new TableField[] { OrganizationUnit.ORGANIZATION_UNIT.PARENT_ID }, Keys.ORGANIZATION_UNIT_PKEY, new TableField[] { OrganizationUnit.ORGANIZATION_UNIT.ID }, true);
    public static final ForeignKey<ProjectRecord, OrganizationRecord> PROJECT__PROJECT_ORGANIZATION_ID_FKEY = Internal.createForeignKey(Project.PROJECT, DSL.name("project_organization_id_fkey"), new TableField[] { Project.PROJECT.ORGANIZATION_ID }, Keys.ORGANIZATION_PKEY, new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final ForeignKey<ProjectRecord, ResourceRecord> PROJECT__PROJECT_RESOURCE_ID_FKEY = Internal.createForeignKey(Project.PROJECT, DSL.name("project_resource_id_fkey"), new TableField[] { Project.PROJECT.RESOURCE_ID }, Keys.RESOURCE_PKEY, new TableField[] { Resource.RESOURCE.ID }, true);
    public static final ForeignKey<RolePermissionRecord, PermissionRecord> ROLE_PERMISSION__ROLE_PERMISSION_PERMISSION_ID_FKEY = Internal.createForeignKey(RolePermission.ROLE_PERMISSION, DSL.name("role_permission_permission_id_fkey"), new TableField[] { RolePermission.ROLE_PERMISSION.PERMISSION_ID }, Keys.PERMISSION_PKEY, new TableField[] { Permission.PERMISSION.ID }, true);
    public static final ForeignKey<RolePermissionRecord, RoleRecord> ROLE_PERMISSION__ROLE_PERMISSION_ROLE_ID_FKEY = Internal.createForeignKey(RolePermission.ROLE_PERMISSION, DSL.name("role_permission_role_id_fkey"), new TableField[] { RolePermission.ROLE_PERMISSION.ROLE_ID }, Keys.ROLE_PKEY, new TableField[] { Role.ROLE.ID }, true);
    public static final ForeignKey<ServiceRecord, ProjectRecord> SERVICE__SERVICE_PROJECT_ID_FKEY = Internal.createForeignKey(Service.SERVICE, DSL.name("service_project_id_fkey"), new TableField[] { Service.SERVICE.PROJECT_ID }, Keys.PROJECT_PKEY, new TableField[] { Project.PROJECT.ID }, true);
    public static final ForeignKey<ServiceRecord, ResourceRecord> SERVICE__SERVICE_RESOURCE_ID_FKEY = Internal.createForeignKey(Service.SERVICE, DSL.name("service_resource_id_fkey"), new TableField[] { Service.SERVICE.RESOURCE_ID }, Keys.RESOURCE_PKEY, new TableField[] { Resource.RESOURCE.ID }, true);
}
