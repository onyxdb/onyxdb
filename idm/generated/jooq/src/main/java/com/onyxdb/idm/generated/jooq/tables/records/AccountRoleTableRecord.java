/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.idm.generated.jooq.tables.records;


import com.onyxdb.idm.generated.jooq.tables.AccountRoleTable;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRoleTableRecord extends UpdatableRecordImpl<AccountRoleTableRecord> implements Record3<UUID, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.account_role_table.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.account_role_table.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.account_role_table.role_id</code>.
     */
    public void setRoleId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.account_role_table.role_id</code>.
     */
    public UUID getRoleId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.account_role_table.resource_id</code>.
     */
    public void setResourceId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.account_role_table.resource_id</code>.
     */
    public UUID getResourceId() {
        return (UUID) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<UUID, UUID, UUID> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, UUID> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, UUID, UUID> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return AccountRoleTable.ACCOUNT_ROLE_TABLE.ACCOUNT_ID;
    }

    @Override
    public Field<UUID> field2() {
        return AccountRoleTable.ACCOUNT_ROLE_TABLE.ROLE_ID;
    }

    @Override
    public Field<UUID> field3() {
        return AccountRoleTable.ACCOUNT_ROLE_TABLE.RESOURCE_ID;
    }

    @Override
    public UUID component1() {
        return getAccountId();
    }

    @Override
    public UUID component2() {
        return getRoleId();
    }

    @Override
    public UUID component3() {
        return getResourceId();
    }

    @Override
    public UUID value1() {
        return getAccountId();
    }

    @Override
    public UUID value2() {
        return getRoleId();
    }

    @Override
    public UUID value3() {
        return getResourceId();
    }

    @Override
    public AccountRoleTableRecord value1(UUID value) {
        setAccountId(value);
        return this;
    }

    @Override
    public AccountRoleTableRecord value2(UUID value) {
        setRoleId(value);
        return this;
    }

    @Override
    public AccountRoleTableRecord value3(UUID value) {
        setResourceId(value);
        return this;
    }

    @Override
    public AccountRoleTableRecord values(UUID value1, UUID value2, UUID value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRoleTableRecord
     */
    public AccountRoleTableRecord() {
        super(AccountRoleTable.ACCOUNT_ROLE_TABLE);
    }

    /**
     * Create a detached, initialised AccountRoleTableRecord
     */
    public AccountRoleTableRecord(UUID accountId, UUID roleId, UUID resourceId) {
        super(AccountRoleTable.ACCOUNT_ROLE_TABLE);

        setAccountId(accountId);
        setRoleId(roleId);
        setResourceId(resourceId);
    }
}
