/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.idm.generated.jooq.tables.records;


import com.onyxdb.idm.generated.jooq.tables.RoleTable;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RoleTableRecord extends UpdatableRecordImpl<RoleTableRecord> implements Record8<UUID, String, String, String, String, UUID, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.role_table.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.role_table.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.role_table.role_type</code>.
     */
    public void setRoleType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.role_table.role_type</code>.
     */
    public String getRoleType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.role_table.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.role_table.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.role_table.shop_name</code>.
     */
    public void setShopName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.role_table.shop_name</code>.
     */
    public String getShopName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.role_table.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.role_table.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.role_table.project_id</code>.
     */
    public void setProjectId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.role_table.project_id</code>.
     */
    public UUID getProjectId() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.role_table.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.role_table.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.role_table.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.role_table.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, String, String, String, String, UUID, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, String, String, String, String, UUID, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return RoleTable.ROLE_TABLE.ID;
    }

    @Override
    public Field<String> field2() {
        return RoleTable.ROLE_TABLE.ROLE_TYPE;
    }

    @Override
    public Field<String> field3() {
        return RoleTable.ROLE_TABLE.NAME;
    }

    @Override
    public Field<String> field4() {
        return RoleTable.ROLE_TABLE.SHOP_NAME;
    }

    @Override
    public Field<String> field5() {
        return RoleTable.ROLE_TABLE.DESCRIPTION;
    }

    @Override
    public Field<UUID> field6() {
        return RoleTable.ROLE_TABLE.PROJECT_ID;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return RoleTable.ROLE_TABLE.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return RoleTable.ROLE_TABLE.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRoleType();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getShopName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public UUID component6() {
        return getProjectId();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRoleType();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getShopName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public UUID value6() {
        return getProjectId();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public RoleTableRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public RoleTableRecord value2(String value) {
        setRoleType(value);
        return this;
    }

    @Override
    public RoleTableRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public RoleTableRecord value4(String value) {
        setShopName(value);
        return this;
    }

    @Override
    public RoleTableRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public RoleTableRecord value6(UUID value) {
        setProjectId(value);
        return this;
    }

    @Override
    public RoleTableRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public RoleTableRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public RoleTableRecord values(UUID value1, String value2, String value3, String value4, String value5, UUID value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleTableRecord
     */
    public RoleTableRecord() {
        super(RoleTable.ROLE_TABLE);
    }

    /**
     * Create a detached, initialised RoleTableRecord
     */
    public RoleTableRecord(UUID id, String roleType, String name, String shopName, String description, UUID projectId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(RoleTable.ROLE_TABLE);

        setId(id);
        setRoleType(roleType);
        setName(name);
        setShopName(shopName);
        setDescription(description);
        setProjectId(projectId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
