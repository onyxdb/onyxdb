/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.idm.generated.jooq.tables.records;


import com.onyxdb.idm.generated.jooq.tables.RolePermissionTable;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RolePermissionTableRecord extends UpdatableRecordImpl<RolePermissionTableRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.role_permission_table.role_id</code>.
     */
    public void setRoleId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.role_permission_table.role_id</code>.
     */
    public UUID getRoleId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.role_permission_table.permission_id</code>.
     */
    public void setPermissionId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.role_permission_table.permission_id</code>.
     */
    public UUID getPermissionId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return RolePermissionTable.ROLE_PERMISSION_TABLE.ROLE_ID;
    }

    @Override
    public Field<UUID> field2() {
        return RolePermissionTable.ROLE_PERMISSION_TABLE.PERMISSION_ID;
    }

    @Override
    public UUID component1() {
        return getRoleId();
    }

    @Override
    public UUID component2() {
        return getPermissionId();
    }

    @Override
    public UUID value1() {
        return getRoleId();
    }

    @Override
    public UUID value2() {
        return getPermissionId();
    }

    @Override
    public RolePermissionTableRecord value1(UUID value) {
        setRoleId(value);
        return this;
    }

    @Override
    public RolePermissionTableRecord value2(UUID value) {
        setPermissionId(value);
        return this;
    }

    @Override
    public RolePermissionTableRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RolePermissionTableRecord
     */
    public RolePermissionTableRecord() {
        super(RolePermissionTable.ROLE_PERMISSION_TABLE);
    }

    /**
     * Create a detached, initialised RolePermissionTableRecord
     */
    public RolePermissionTableRecord(UUID roleId, UUID permissionId) {
        super(RolePermissionTable.ROLE_PERMISSION_TABLE);

        setRoleId(roleId);
        setPermissionId(permissionId);
        resetChangedOnNotNull();
    }
}
