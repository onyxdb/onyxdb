/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.idm.generated.jooq.tables.records;


import com.onyxdb.idm.generated.jooq.tables.RolePermissionTable;

import java.util.UUID;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RolePermissionTableRecord extends UpdatableRecordImpl<RolePermissionTableRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.role_permission_table.role_id</code>.
     */
    public void setRoleId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.role_permission_table.role_id</code>.
     */
    public UUID getRoleId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.role_permission_table.permission_id</code>.
     */
    public void setPermissionId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.role_permission_table.permission_id</code>.
     */
    public UUID getPermissionId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RolePermissionTableRecord
     */
    public RolePermissionTableRecord() {
        super(RolePermissionTable.ROLE_PERMISSION_TABLE);
    }

    /**
     * Create a detached, initialised RolePermissionTableRecord
     */
    public RolePermissionTableRecord(UUID roleId, UUID permissionId) {
        super(RolePermissionTable.ROLE_PERMISSION_TABLE);

        setRoleId(roleId);
        setPermissionId(permissionId);
        resetChangedOnNotNull();
    }
}
