/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.idm.generated.jooq.tables.records;


import com.onyxdb.idm.generated.jooq.tables.AccountBusinessRoleTable;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountBusinessRoleTableRecord extends UpdatableRecordImpl<AccountBusinessRoleTableRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.account_business_role_table.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.account_business_role_table.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(0);
    }

    /**
     * Setter for
     * <code>public.account_business_role_table.business_role_id</code>.
     */
    public void setBusinessRoleId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>public.account_business_role_table.business_role_id</code>.
     */
    public UUID getBusinessRoleId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return AccountBusinessRoleTable.ACCOUNT_BUSINESS_ROLE_TABLE.ACCOUNT_ID;
    }

    @Override
    public Field<UUID> field2() {
        return AccountBusinessRoleTable.ACCOUNT_BUSINESS_ROLE_TABLE.BUSINESS_ROLE_ID;
    }

    @Override
    public UUID component1() {
        return getAccountId();
    }

    @Override
    public UUID component2() {
        return getBusinessRoleId();
    }

    @Override
    public UUID value1() {
        return getAccountId();
    }

    @Override
    public UUID value2() {
        return getBusinessRoleId();
    }

    @Override
    public AccountBusinessRoleTableRecord value1(UUID value) {
        setAccountId(value);
        return this;
    }

    @Override
    public AccountBusinessRoleTableRecord value2(UUID value) {
        setBusinessRoleId(value);
        return this;
    }

    @Override
    public AccountBusinessRoleTableRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountBusinessRoleTableRecord
     */
    public AccountBusinessRoleTableRecord() {
        super(AccountBusinessRoleTable.ACCOUNT_BUSINESS_ROLE_TABLE);
    }

    /**
     * Create a detached, initialised AccountBusinessRoleTableRecord
     */
    public AccountBusinessRoleTableRecord(UUID accountId, UUID businessRoleId) {
        super(AccountBusinessRoleTable.ACCOUNT_BUSINESS_ROLE_TABLE);

        setAccountId(accountId);
        setBusinessRoleId(businessRoleId);
    }
}
