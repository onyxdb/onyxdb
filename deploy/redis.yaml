apiVersion: v1
kind: Secret
metadata:
  name: redis-onyxdb
  labels:
    app.kubernetes.io/name: redis-onyxdb
    app.kubernetes.io/instance: redis-onyxdb
stringData:
  REDIS_USER: "onyxdb"
  REDIS_PASSWORD: "qwerty"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-onyxdb
  labels:
    app.kubernetes.io/name: redis-onyxdb
    app.kubernetes.io/instance: redis-onyxdb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-onyxdb
spec:
  serviceName: redis-onyxdb
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-onyxdb
      app.kubernetes.io/instance: redis-onyxdb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-onyxdb
        app.kubernetes.io/instance: redis-onyxdb
    spec:
      containers:
        - name: redis
          image: "redis:8.0"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
          args:
            - "--user $(REDIS_USER) on >$(REDIS_PASSWORD) ~* +@all"
            - "--user default off"
            - "--requirepass $(REDIS_PASSWORD)"
          envFrom:
            - secretRef:
                name: redis-onyxdb
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: redis-onyxdb
---
apiVersion: v1
kind: Service
metadata:
  name: redis-onyxdb
  labels:
    app.kubernetes.io/name: redis-onyxdb
    app.kubernetes.io/instance: redis-onyxdb
spec:
  selector:
    app.kubernetes.io/name: redis-onyxdb
    app.kubernetes.io/instance: redis-onyxdb
  ports:
    - port: 6379
