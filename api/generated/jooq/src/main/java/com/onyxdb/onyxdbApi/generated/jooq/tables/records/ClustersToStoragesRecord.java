/*
 * This file is generated by jOOQ.
 */
package com.onyxdb.onyxdbApi.generated.jooq.tables.records;


import com.onyxdb.onyxdbApi.generated.jooq.tables.ClustersToStorages;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClustersToStoragesRecord extends TableRecordImpl<ClustersToStoragesRecord> implements Record2<UUID, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.clusters_to_storages.cluster_id</code>.
     */
    public void setClusterId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.clusters_to_storages.cluster_id</code>.
     */
    public UUID getClusterId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.clusters_to_storages.disk_size</code>.
     */
    public void setDiskSize(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.clusters_to_storages.disk_size</code>.
     */
    public Long getDiskSize() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ClustersToStorages.CLUSTERS_TO_STORAGES.CLUSTER_ID;
    }

    @Override
    public Field<Long> field2() {
        return ClustersToStorages.CLUSTERS_TO_STORAGES.DISK_SIZE;
    }

    @Override
    public UUID component1() {
        return getClusterId();
    }

    @Override
    public Long component2() {
        return getDiskSize();
    }

    @Override
    public UUID value1() {
        return getClusterId();
    }

    @Override
    public Long value2() {
        return getDiskSize();
    }

    @Override
    public ClustersToStoragesRecord value1(UUID value) {
        setClusterId(value);
        return this;
    }

    @Override
    public ClustersToStoragesRecord value2(Long value) {
        setDiskSize(value);
        return this;
    }

    @Override
    public ClustersToStoragesRecord values(UUID value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClustersToStoragesRecord
     */
    public ClustersToStoragesRecord() {
        super(ClustersToStorages.CLUSTERS_TO_STORAGES);
    }

    /**
     * Create a detached, initialised ClustersToStoragesRecord
     */
    public ClustersToStoragesRecord(UUID clusterId, Long diskSize) {
        super(ClustersToStorages.CLUSTERS_TO_STORAGES);

        setClusterId(clusterId);
        setDiskSize(diskSize);
    }
}
