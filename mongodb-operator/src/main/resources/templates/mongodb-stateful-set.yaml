apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: managed-mongodb
  namespace: onyxdb
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: database
      app.kubernetes.io/instance: test
      app.kubernetes.io/managed-by: onyxdb-managed-mongodb-operator
      app.kubernetes.io/name: onyxdb-managed-mongodb
      app.kubernetes.io/part-of: onyxdb-managed-mongodb
  serviceName: managed-mongodb
  template:
    metadata:
      name: managed-mongodb
      namespace: onyxdb
      labels:
        app.kubernetes.io/component: database
        app.kubernetes.io/instance: test
        app.kubernetes.io/managed-by: onyxdb-managed-mongodb-operator
        app.kubernetes.io/name: onyxdb-managed-mongodb
        app.kubernetes.io/part-of: onyxdb-managed-mongodb
    spec:
      containers:
        - name: managed-mongodb
          image: mongo:7.0.16
          imagePullPolicy: IfNotPresent
          command:
            - mongod
            - '--bind_ip_all'
            - '--dbpath'
            - /data/db
            - '--replSet'
            - rs0
          resources:
            limits:
              memory: 1Gi
          volumeMounts:
            - mountPath: /data/db
              name: managed-mongodb-pvc
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: user
                  name: managed-mongodb
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: managed-mongodb
  volumeClaimTemplates:
    - metadata:
        name: managed-mongodb-pvc
        namespace: onyxdb
      spec:
        storageClassName: 'standard'
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
